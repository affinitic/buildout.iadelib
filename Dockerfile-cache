FROM ubuntu:20.04

RUN apt-get -qy update && apt-get -o APT::Install-Recommends=false -qy install bash-completion curl htop locales make ncurses-term software-properties-common telnet tzdata vim
RUN ln -sf /usr/share/zoneinfo/Europe/Brussels /etc/localtime
RUN echo "Europe/Brussels" > /etc/timezone; dpkg-reconfigure -f noninteractive tzdata

RUN groupadd -g 209 plone
RUN useradd --shell /bin/bash -u 913 -g 209 -o -c "Plone user" -m plone

ARG repo=buildout.iadelib
RUN mkdir -p /home/plone/.buildout/downloads \
  && mkdir -p /home/plone/.buildout/eggs

ENV HOME=/home/plone
COPY default.cfg /home/plone/.buildout/default.cfg
RUN chown -R plone:plone /home/plone
RUN apt-get update \
  && apt full-upgrade -y \
  && apt-get install -y --no-install-recommends \
   build-essential \
   libpq-dev \
   libreadline-dev \
   wget \
   git \
   curl \
   subversion \
   libpcre3-dev \
   libssl-dev \
   libxml2-dev \
   libxslt1-dev \
   libbz2-dev \
   libffi-dev \
   libjpeg62-dev \
   libopenjp2-7-dev \
   zlib1g-dev \
   python2.7-dev \
   python2.7 \
   graphicsmagick \
   ghostscript \
   poppler-utils \
   ruby \
   libmagic1 \
   libjpeg62 \
   libopenjp2-7 \
   libpython3.6 \
   python3-uno \
   libldap2-dev \
   libldap-2.4-2 \
   libsasl2-dev

RUN  curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py && python2.7 get-pip.py

# ---------
# MS CORE FONTS
# ---------
# from http://askubuntu.com/a/25614
RUN echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | debconf-set-selections
RUN apt-get install -y --no-install-recommends fontconfig ttf-mscorefonts-installer
ADD localfonts.conf /etc/fonts/local.conf

COPY fonts/* /usr/share/fonts/truetype/

RUN fc-cache -f -v

RUN apt-get install -y \
   libreoffice \
   libreoffice-script-provider-python \
   cabextract \
   default-jre \
   libreoffice-java-common \
   lynx

RUN apt-get full-upgrade -y -q

RUN gem install docsplit

USER plone
WORKDIR /home/plone/
RUN git clone https://github.com/affinitic/${repo}.git ${repo}

WORKDIR /home/plone/${repo}
RUN mkdir -p var/filestorage/ \
  && touch var/filestorage/Data.fs \
  && make requirements.txt \
  && pip install -r requirements.txt \
  && /home/plone/.local/bin/buildout -t 60 -Nc docker.cfg

WORKDIR /home/plone/
RUN rm -rf ${repo}
